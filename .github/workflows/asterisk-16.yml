name: asterisk-16 build

on:
  push:
    branches:
      - master
    paths:
      - 'asterisk/cisco-usecallmanager-16.*.patch'

  pull_request:
    branches:
      - master
    paths:
      - 'asterisk/cisco-usecallmanager-16.*.patch'

env:
  ASTERISK_URL: http://downloads.asterisk.org/pub/telephony/asterisk

jobs:
  build:
    name: Patch and build asterisk-16
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install packages
        run: |
          sudo apt install wget patch build-essential zlib1g-dev libssl-dev \
              libncurses-dev libreadline-dev libedit-dev uuid-dev libxml2-dev \
              libsqlite3-dev libjansson-dev

      - name: Get patch version
        run: |
          PATCH_FILE=$(ls -1 -v asterisk/cisco-usecallmanager-16.*.patch | tail -1)
          PATCH_FILE="${PATCH_FILE#asterisk/}"

          echo "PATCH_FILE=$PATCH_FILE" >> $GITHUB_ENV

          ASTERISK_VERSION="${PATCH_FILE#cisco-usecallmanager-}"
          ASTERISK_VERSION="${ASTERISK_VERSION%.patch}"

          echo "ASTERISK_VERSION=$ASTERISK_VERSION" >> $GITHUB_ENV

      - name: Fetch source archive
        run: |
          mkdir downloads
          cd downloads

          wget ${{ env.ASTERISK_URL }}/asterisk-${{ env.ASTERISK_VERSION }}.tar.gz \
              || wget ${{ env.ASTERISK_URL }}/old-releases/asterisk-${{ env.ASTERISK_VERSION }}.tar.gz

      - name: Extract source archive
        run: |
          cd downloads
          tar -zxvf asterisk-${{ env.ASTERISK_VERSION }}.tar.gz

      - name: Apply patch
        run: |
          cd downloads/asterisk-${{ env.ASTERISK_VERSION }}
          patch -p1 < ../../asterisk/${{ env.PATCH_FILE }}

      - name: Run configure and make
        run: |
          cd downloads/asterisk-${{ env.ASTERISK_VERSION }}
          ./configure --without-pjproject
          make
